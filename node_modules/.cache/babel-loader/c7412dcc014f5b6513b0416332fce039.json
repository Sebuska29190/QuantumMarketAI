{"ast":null,"code":"var _jsxFileName = \"/home/sebastian/Pobrane/cryptowatch/src/pages/Layout/CurrenciesRef.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Avatar from '@mui/material/Avatar';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport Grid from '@mui/material/Grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CurrenciesRef(_ref) {\n  _s();\n\n  let {\n    currencies,\n    selectedCurrency,\n    onCurrencyChange\n  } = _ref;\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleCurrencyChange = currencyRef => {\n    onCurrencyChange(currencyRef);\n    handleClose();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClickOpen,\n      color: 'inherit',\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        alt: \"\",\n        src: selectedCurrency.iconUrl || '',\n        sx: {\n          width: 24,\n          height: 24,\n          mr: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), selectedCurrency.symbol]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      disableEscapeKeyDown: true,\n      open: open,\n      maxWidth: 'md',\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: [\"Select Currency\", /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"close\",\n          onClick: handleClose,\n          sx: {\n            position: 'absolute',\n            right: 8,\n            top: 8,\n            color: theme => theme.palette.grey[500]\n          },\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          sx: {\n            display: 'flex',\n            flexWrap: 'wrap'\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 1,\n            children: currencies.map(currency => /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(ToggleButton, {\n                value: currency.uuid,\n                selected: currency.uuid === selectedCurrency.uuid,\n                style: {\n                  textAlign: 'left',\n                  width: '100%',\n                  height: '100%',\n                  justifyContent: 'start'\n                },\n                onChange: () => handleCurrencyChange(currency),\n                children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                  alt: \"\",\n                  src: currency.iconUrl || '',\n                  sx: {\n                    width: 24,\n                    height: 24,\n                    mr: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle2\",\n                    children: currency.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    children: [currency.symbol, \" \", !!currency.sign && ` - ${currency.sign}`]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 41\n              }, this)\n            }, currency.uuid, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CurrenciesRef, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c = CurrenciesRef;\nexport default CurrenciesRef;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrenciesRef\");","map":{"version":3,"sources":["/home/sebastian/Pobrane/cryptowatch/src/pages/Layout/CurrenciesRef.tsx"],"names":["React","Box","Button","Dialog","DialogContent","DialogTitle","IconButton","CloseIcon","Avatar","ToggleButton","Typography","Stack","Grid","CurrenciesRef","currencies","selectedCurrency","onCurrencyChange","open","setOpen","useState","handleClickOpen","handleClose","handleCurrencyChange","currencyRef","iconUrl","width","height","mr","symbol","position","right","top","color","theme","palette","grey","display","flexWrap","map","currency","uuid","textAlign","justifyContent","name","sign"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Avatar from '@mui/material/Avatar';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport Grid from '@mui/material/Grid';\nimport CurrencyRef from '../../models/currencyRef';\n\n\ninterface Props {\n    currencies: CurrencyRef[];\n    selectedCurrency: CurrencyRef;\n    onCurrencyChange: (curency: CurrencyRef) => void;\n}\n\nfunction CurrenciesRef({ currencies, selectedCurrency, onCurrencyChange }: Props) {\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleCurrencyChange = (currencyRef: CurrencyRef) => {\n        onCurrencyChange(currencyRef);\n        handleClose();\n    }\n\n    return (\n        <div>\n            <Button onClick={handleClickOpen} color={'inherit'}>\n                <Avatar\n                    alt=\"\"\n                    src={selectedCurrency.iconUrl || ''}\n                    sx={{ width: 24, height: 24, mr: 1 }}\n                />\n                {selectedCurrency.symbol}\n            </Button>\n            <Dialog disableEscapeKeyDown open={open} maxWidth={'md'} onClose={handleClose}>\n                <DialogTitle>\n                    Select Currency\n                    <IconButton\n                        aria-label=\"close\"\n                        onClick={handleClose}\n                        sx={{\n                            position: 'absolute',\n                            right: 8,\n                            top: 8,\n                            color: (theme) => theme.palette.grey[500],\n                        }}\n                    >\n                        <CloseIcon />\n                    </IconButton>\n                </DialogTitle>\n                <DialogContent>\n                    <Box component=\"form\" sx={{ display: 'flex', flexWrap: 'wrap' }}>\n                        <Grid container spacing={1}>\n                            {\n                                currencies.map(currency => (\n                                    <Grid key={currency.uuid} item xs={12} sm={6} md={4}>\n                                        <ToggleButton\n                                            value={currency.uuid}\n                                            selected={currency.uuid === selectedCurrency.uuid}\n                                            style={{ textAlign: 'left', width: '100%', height: '100%', justifyContent: 'start' }}\n                                            onChange={() => handleCurrencyChange(currency)}\n                                        >\n                                            <Avatar\n                                                alt=\"\"\n                                                src={currency.iconUrl || ''}\n                                                sx={{ width: 24, height: 24, mr: 1 }}\n                                            />\n                                            <Stack>\n                                                <Typography variant='subtitle2'>{currency.name}</Typography>\n                                                <Typography variant='caption'>{currency.symbol} {!!currency.sign && ` - ${currency.sign}`}</Typography>\n                                            </Stack>\n                                        </ToggleButton>\n                                    </Grid>\n                                ))\n                            }\n                        </Grid>\n                    </Box>\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default CurrenciesRef;\n"]},"metadata":{},"sourceType":"module"}