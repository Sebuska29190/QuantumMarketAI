{"ast":null,"code":"import _objectSpread from\"/home/sebastian/Pobrane/cryptowatch/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _classCallCheck from\"/home/sebastian/Pobrane/cryptowatch/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/sebastian/Pobrane/cryptowatch/node_modules/@babel/runtime/helpers/esm/createClass.js\";var BaseService=/*#__PURE__*/function(){function BaseService(endpoint,queryParams){_classCallCheck(this,BaseService);this.endpoint=endpoint;this.queryParams=queryParams;this.cache=void 0;this.cache={};}_createClass(BaseService,[{key:\"fetchFakeData\",value:function fetchFakeData(data,time){return new Promise(function(resolve,_){setTimeout(function(){return resolve(data);},time);});}},{key:\"getQueryParams\",value:function getQueryParams(queryParams){return _objectSpread(_objectSpread({},this.queryParams),queryParams);}},{key:\"getUrl\",value:function getUrl(queryParams){var url=new URL(this.endpoint);for(var key in queryParams){url.searchParams.set(key,queryParams[key]);}return url.href;}},{key:\"putInCache\",value:function putInCache(response,url,time){this.cache[url]={timestamp:new Date(new Date().getTime()+time*60000).getTime(),response:response};}},{key:\"isCacheResponseValid\",value:function isCacheResponseValid(url){// check if response exists and time is less than 5min from the last call\nreturn this.cache[url]&&this.cache[url].timestamp>new Date().getTime();}},{key:\"getFromCache\",value:function getFromCache(url){return this.cache[url].response;}}]);return BaseService;}();export{BaseService as default};","map":null,"metadata":{},"sourceType":"module"}