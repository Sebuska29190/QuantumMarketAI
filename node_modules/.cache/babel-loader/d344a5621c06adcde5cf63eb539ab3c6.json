{"ast":null,"code":"import BaseService from \"./baseService\";\nimport { mergeMap, of, throwError } from \"rxjs\";\nimport { fromFetch } from \"rxjs/fetch\";\nexport default class GlobalStatsService extends BaseService {\n  constructor() {\n    super('https://coinranking1.p.rapidapi.com/stats', {});\n    this.options = void 0;\n    this.options = {\n      headers: {\n        'x-rapidapi-host': process.env.REACT_APP_RAPID_API_COINRANKING_HOST,\n        'x-rapidapi-key': process.env.REACT_APP_RAPID_API_COINRANKING_KEY\n      }\n    };\n  }\n\n  retrieve() {\n    let queryParams = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const qp = this.getQueryParams(queryParams);\n    const url = this.getUrl(qp);\n\n    if (this.isCacheResponseValid(url)) {\n      return of(this.getFromCache(url));\n    }\n\n    return fromFetch(url, this.options).pipe(mergeMap(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return throwError(() => new Error(res.statusText));\n      }\n    }), mergeMap(res => {\n      this.putInCache(res, url, 5);\n      return of(res);\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/sebastian/Pobrane/cryptowatch/src/services/globalStatsService.ts"],"names":["BaseService","mergeMap","of","throwError","fromFetch","GlobalStatsService","constructor","options","headers","process","env","REACT_APP_RAPID_API_COINRANKING_HOST","REACT_APP_RAPID_API_COINRANKING_KEY","retrieve","queryParams","qp","getQueryParams","url","getUrl","isCacheResponseValid","getFromCache","pipe","res","ok","json","Error","statusText","putInCache"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,eAAxB;AAEA,SAASC,QAAT,EAA+BC,EAA/B,EAAmCC,UAAnC,QAAqD,MAArD;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,eAAe,MAAMC,kBAAN,SAAiCL,WAAjC,CAA0D;AAIrEM,EAAAA,WAAW,GAAG;AACV,UAAM,2CAAN,EAAmD,EAAnD;AADU,SAFJC,OAEI;AAEV,SAAKA,OAAL,GAAe;AACXC,MAAAA,OAAO,EAAE;AACL,2BAAmBC,OAAO,CAACC,GAAR,CAAYC,oCAD1B;AAEL,0BAAkBF,OAAO,CAACC,GAAR,CAAYE;AAFzB;AADE,KAAf;AAMH;;AAEMC,EAAAA,QAAQ,GAA4C;AAAA,QAA3CC,WAA2C,uEAA7B,EAA6B;AACvD,UAAMC,EAAE,GAAG,KAAKC,cAAL,CAAoBF,WAApB,CAAX;AACA,UAAMG,GAAG,GAAG,KAAKC,MAAL,CAAYH,EAAZ,CAAZ;;AAEA,QAAI,KAAKI,oBAAL,CAA0BF,GAA1B,CAAJ,EAAoC;AAChC,aAAOf,EAAE,CAAC,KAAKkB,YAAL,CAAkBH,GAAlB,CAAD,CAAT;AACH;;AAED,WAAOb,SAAS,CAACa,GAAD,EAAM,KAAKV,OAAX,CAAT,CAA6Bc,IAA7B,CACHpB,QAAQ,CAAEqB,GAAD,IAAc;AACnB,UAAIA,GAAG,CAACC,EAAR,EAAY;AACR,eAAOD,GAAG,CAACE,IAAJ,EAAP;AACH,OAFD,MAEO;AACH,eAAOrB,UAAU,CAAC,MAAM,IAAIsB,KAAJ,CAAUH,GAAG,CAACI,UAAd,CAAP,CAAjB;AACH;AACJ,KANO,CADL,EAQHzB,QAAQ,CAAEqB,GAAD,IAAc;AACnB,WAAKK,UAAL,CAAgBL,GAAhB,EAAqBL,GAArB,EAA0B,CAA1B;AACA,aAAOf,EAAE,CAACoB,GAAD,CAAT;AACH,KAHO,CARL,CAAP;AAaH;;AAnCoE","sourcesContent":["import BaseService from \"./baseService\"\nimport GlobalStats from '../models/globalStats';\nimport { mergeMap, Observable, of, throwError } from \"rxjs\";\nimport { fromFetch } from \"rxjs/fetch\";\n\nexport default class GlobalStatsService extends BaseService<GlobalStats> {\n\n    protected options: any\n\n    constructor() {\n        super('https://coinranking1.p.rapidapi.com/stats', {});\n        this.options = {\n            headers: {\n                'x-rapidapi-host': process.env.REACT_APP_RAPID_API_COINRANKING_HOST,\n                'x-rapidapi-key': process.env.REACT_APP_RAPID_API_COINRANKING_KEY\n            }\n        }\n    }\n\n    public retrieve(queryParams = {}): Observable<GlobalStats> {\n        const qp = this.getQueryParams(queryParams);\n        const url = this.getUrl(qp);\n\n        if (this.isCacheResponseValid(url)) {\n            return of(this.getFromCache(url));\n        }\n\n        return fromFetch(url, this.options).pipe(\n            mergeMap((res: any) => {\n                if (res.ok) {\n                    return res.json();\n                } else {\n                    return throwError(() => new Error(res.statusText));\n                }\n            }),\n            mergeMap((res: any) => {\n                this.putInCache(res, url, 5);\n                return of(res);\n            })\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}