{"ast":null,"code":"import { mergeMap, of, throwError } from \"rxjs\";\nimport { fromFetch } from 'rxjs/fetch';\nimport BaseService from \"./baseService\";\nexport default class CurrenciesRefService extends BaseService {\n  constructor() {\n    super('https://coinranking1.p.rapidapi.com/reference-currencies', {\n      types: 'fiat',\n      limit: '20',\n      offset: '0'\n    });\n    this.options = void 0;\n    this.options = {\n      headers: {\n        'x-rapidapi-host': process.env.REACT_APP_RAPID_API_COINRANKING_HOST,\n        'x-rapidapi-key': process.env.REACT_APP_RAPID_API_COINRANKING_KEY\n      }\n    };\n  }\n\n  retrieve() {\n    let queryparams = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const qp = this.getQueryParams(queryparams);\n    const url = this.getUrl(qp);\n    return fromFetch(url, this.options).pipe(mergeMap(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return throwError(() => new Error(res.statusText));\n      }\n    }), mergeMap(res => {\n      const tn = {\n        uuid: \"hi8n6hTOv12f\",\n        type: \"fiat\",\n        iconUrl: \"https://cdn.coinranking.com/4Fi9RPio-/tunisian-dinar.svg\",\n        name: \"Tunisian Dinar\",\n        symbol: \"TND\",\n        sign: null\n      };\n      const data = res['data']['currencies'];\n      data.push(tn);\n      return of(data);\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/sebastian/Pobrane/cryptowatch/src/services/currenciesRefService.ts"],"names":["mergeMap","of","throwError","fromFetch","BaseService","CurrenciesRefService","constructor","types","limit","offset","options","headers","process","env","REACT_APP_RAPID_API_COINRANKING_HOST","REACT_APP_RAPID_API_COINRANKING_KEY","retrieve","queryparams","qp","getQueryParams","url","getUrl","pipe","res","ok","json","Error","statusText","tn","uuid","type","iconUrl","name","symbol","sign","data","push"],"mappings":"AAAA,SAASA,QAAT,EAA+BC,EAA/B,EAAmCC,UAAnC,QAAqD,MAArD;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,eAAe,MAAMC,oBAAN,SAAmCD,WAAnC,CAA8D;AAIzEE,EAAAA,WAAW,GAAG;AACV,UAAM,0DAAN,EAAkE;AAAEC,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,KAAK,EAAE,IAAxB;AAA8BC,MAAAA,MAAM,EAAE;AAAtC,KAAlE;AADU,SAFJC,OAEI;AAEV,SAAKA,OAAL,GAAe;AACXC,MAAAA,OAAO,EAAE;AACL,2BAAmBC,OAAO,CAACC,GAAR,CAAYC,oCAD1B;AAEL,0BAAkBF,OAAO,CAACC,GAAR,CAAYE;AAFzB;AADE,KAAf;AAMH;;AAEMC,EAAAA,QAAQ,GAA8C;AAAA,QAA7CC,WAA6C,uEAA/B,EAA+B;AACzD,UAAMC,EAAE,GAAG,KAAKC,cAAL,CAAoBF,WAApB,CAAX;AACA,UAAMG,GAAG,GAAG,KAAKC,MAAL,CAAYH,EAAZ,CAAZ;AAEA,WAAOf,SAAS,CAACiB,GAAD,EAAM,KAAKV,OAAX,CAAT,CAA6BY,IAA7B,CACHtB,QAAQ,CAAEuB,GAAD,IAAc;AACnB,UAAIA,GAAG,CAACC,EAAR,EAAY;AACR,eAAOD,GAAG,CAACE,IAAJ,EAAP;AACH,OAFD,MAEO;AACH,eAAOvB,UAAU,CAAC,MAAM,IAAIwB,KAAJ,CAAUH,GAAG,CAACI,UAAd,CAAP,CAAjB;AACH;AACJ,KANO,CADL,EAQH3B,QAAQ,CAAEuB,GAAD,IAAc;AACnB,YAAMK,EAAE,GAAG;AACPC,QAAAA,IAAI,EAAE,cADC;AAEPC,QAAAA,IAAI,EAAE,MAFC;AAGPC,QAAAA,OAAO,EAAE,0DAHF;AAIPC,QAAAA,IAAI,EAAE,gBAJC;AAKPC,QAAAA,MAAM,EAAE,KALD;AAMPC,QAAAA,IAAI,EAAE;AANC,OAAX;AAQA,YAAMC,IAAI,GAAGZ,GAAG,CAAC,MAAD,CAAH,CAAY,YAAZ,CAAb;AACAY,MAAAA,IAAI,CAACC,IAAL,CAAUR,EAAV;AACA,aAAO3B,EAAE,CAACkC,IAAD,CAAT;AACH,KAZO,CARL,CAAP;AAsBH;;AAxCwE","sourcesContent":["import { mergeMap, Observable, of, throwError } from \"rxjs\";\nimport { fromFetch } from 'rxjs/fetch';\nimport CurrencyRef from \"../models/currencyRef\";\nimport BaseService from \"./baseService\";\n\nexport default class CurrenciesRefService extends BaseService<CurrencyRef[]> {\n\n    protected options: any;\n\n    constructor() {\n        super('https://coinranking1.p.rapidapi.com/reference-currencies', { types: 'fiat', limit: '20', offset: '0' });\n        this.options = {\n            headers: {\n                'x-rapidapi-host': process.env.REACT_APP_RAPID_API_COINRANKING_HOST,\n                'x-rapidapi-key': process.env.REACT_APP_RAPID_API_COINRANKING_KEY\n            }\n        }\n    }\n\n    public retrieve(queryparams = {}): Observable<CurrencyRef[]> {\n        const qp = this.getQueryParams(queryparams);\n        const url = this.getUrl(qp);\n\n        return fromFetch(url, this.options).pipe(\n            mergeMap((res: any) => {\n                if (res.ok) {\n                    return res.json();\n                } else {\n                    return throwError(() => new Error(res.statusText))\n                }\n            }),\n            mergeMap((res: any) => {\n                const tn = {\n                    uuid: \"hi8n6hTOv12f\",\n                    type: \"fiat\",\n                    iconUrl: \"https://cdn.coinranking.com/4Fi9RPio-/tunisian-dinar.svg\",\n                    name: \"Tunisian Dinar\",\n                    symbol: \"TND\",\n                    sign: null\n                }\n                const data = res['data']['currencies'] as CurrencyRef[]\n                data.push(tn);\n                return of(data);\n            })\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}